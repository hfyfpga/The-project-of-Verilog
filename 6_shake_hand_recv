//Communication by the way of shake hand
//Receive part
//author:WangFW
//date:2020-5-2

module shake_hand_recv(clk,rst_n,ready,din,dout,ack);
	input clk,rst_n;
	input ready;
	input [7:0] din;
	output reg [7:0] dout;
	output reg ack;

	reg ready_d1,ready_d2;

	parameter idle=2'b00,active=2'b01,reset=2'b10;

	reg [1:0] state,next_state;

	always @(posedge clk or negedge rst_n)
		begin
			if(!rst_n)
				begin
					ready_d1<=1'b0;
					ready_d2<=1'b0;
				end
			else
				begin
					ready_d1<=ready;
					ready_d2<=ready_d1;
				end
		end

	always @(posedge clk or negedge rst_n)
		begin
			if(!rst_n)
				begin
					state<=idle;
					next_state<=idle;
				end
			else
				state<=next_state;
		end

	always @(state)
		begin
			case(state)
				idle:begin
					dout<=8'd0;
					ack<=1'b0;
					end
				active:begin
					dout<=din;
					ack<=1'b1;
					end
				reset:begin
					dout<=8'd0;
					ack<=1'b0;
					end
				default:;
			endcase
		end

	always @(din or ready)
		begin
			case(state)
				idle:next_state<=active;
				active:begin
					if(ready_d2==1'b1)
						next_state<=reset;
					else
						next_state<=active;
					end
				reset:begin
					if(ready_d2==1'b1)
						next_state<=reset;
					else
						next_state<=active;
					end
				default:next_state<=idle;
			endcase
		end
endmodule
